# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def insertionSortList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if head==None:
            return None
        if head.next==None:
            return head
        if head.next.val<head.val:
            temp=head.next
            head.next=temp.next
            temp.next=head
            head=temp
        targetPre=head
        targetNode=head.next
        while targetNode!=None:
            if targetNode.val>=targetPre.val:
                targetPre=targetNode
                targetNode=targetNode.next                
                continue            
            if head.val>targetNode.val:                
                targetPre.next=targetNode.next
                targetNode.next=head
                head=targetNode
            else:
                contrastNode=head
                while contrastNode!=None and contrastNode.next.val<targetNode.val:
                    contrastNode=contrastNode.next
                targetPre.next=targetNode.next
                targetNode.next=contrastNode.next
                contrastNode.next=targetNode            
            targetNode=targetPre.next
                    
        return head
